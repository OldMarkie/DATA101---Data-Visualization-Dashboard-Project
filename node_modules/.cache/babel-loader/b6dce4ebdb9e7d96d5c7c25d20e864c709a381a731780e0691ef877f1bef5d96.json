{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oldma\\\\OneDrive\\\\Documents\\\\DATA101---Data-Visualization-Dashboard-Project\\\\src\\\\components\\\\WorldMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldMap = () => {\n  _s();\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  useEffect(() => {\n    fetch('/data/custom.geo.json').then(response => response.json()).then(data => setGeoJsonData(data)).catch(err => console.error('Error loading GeoJSON:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    center: [20, 0],\n    zoom: 2,\n    zoomControl: false,\n    dragging: false,\n    doubleClickZoom: false,\n    scrollWheelZoom: false,\n    touchZoom: false,\n    keyboard: false,\n    attributionControl: false,\n    worldCopyJump: false // Prevents the continuous map effect\n    ,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n      attribution: \"\\xA9 <a href=\\\"https://www.esri.com/\\\">Esri</a>\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), geoJsonData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: geoJsonData,\n      style: {\n        color: \"#005bff\",\n        weight: 1,\n        fillColor: \"#a3caff\",\n        fillOpacity: 0.5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldMap, \"Ifl/AKJWIeNfysl5PFAQWCy+4d0=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","GeoJSON","jsxDEV","_jsxDEV","WorldMap","_s","geoJsonData","setGeoJsonData","fetch","then","response","json","data","catch","err","console","error","style","width","height","center","zoom","zoomControl","dragging","doubleClickZoom","scrollWheelZoom","touchZoom","keyboard","attributionControl","worldCopyJump","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","color","weight","fillColor","fillOpacity","_c","$RefreshReg$"],"sources":["C:/Users/oldma/OneDrive/Documents/DATA101---Data-Visualization-Dashboard-Project/src/components/WorldMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\r\n\r\nconst WorldMap = () => {\r\n  const [geoJsonData, setGeoJsonData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('/data/custom.geo.json')\r\n      .then(response => response.json())\r\n      .then(data => setGeoJsonData(data))\r\n      .catch(err => console.error('Error loading GeoJSON:', err));\r\n  }, []);\r\n\r\n  return (\r\n    <MapContainer\r\n      style={{ width: '100vw', height: '100vh' }}\r\n      center={[20, 0]}\r\n      zoom={2}\r\n      zoomControl={false}\r\n      dragging={false}\r\n      doubleClickZoom={false}\r\n      scrollWheelZoom={false}\r\n      touchZoom={false}\r\n      keyboard={false}\r\n      attributionControl={false}\r\n      worldCopyJump={false} // Prevents the continuous map effect\r\n    >\r\n      <TileLayer\r\n  url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n  attribution='&copy; <a href=\"https://www.esri.com/\">Esri</a>'\r\n/>\r\n\r\n\r\n      {geoJsonData && (\r\n        <GeoJSON\r\n          data={geoJsonData}\r\n          style={{\r\n            color: \"#005bff\",\r\n            weight: 1,\r\n            fillColor: \"#a3caff\",\r\n            fillOpacity: 0.5\r\n          }}\r\n        />\r\n      )}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default WorldMap;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,uBAAuB,CAAC,CAC3BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,cAAc,CAACK,IAAI,CAAC,CAAC,CAClCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACJ,YAAY;IACXkB,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAC3CC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAE;IAChBC,IAAI,EAAE,CAAE;IACRC,WAAW,EAAE,KAAM;IACnBC,QAAQ,EAAE,KAAM;IAChBC,eAAe,EAAE,KAAM;IACvBC,eAAe,EAAE,KAAM;IACvBC,SAAS,EAAE,KAAM;IACjBC,QAAQ,EAAE,KAAM;IAChBC,kBAAkB,EAAE,KAAM;IAC1BC,aAAa,EAAE,KAAM,CAAC;IAAA;IAAAC,QAAA,gBAEtB3B,OAAA,CAACH,SAAS;MACd+B,GAAG,EAAC,+FAA+F;MACnGC,WAAW,EAAC;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,EAGK9B,WAAW,iBACVH,OAAA,CAACF,OAAO;MACNW,IAAI,EAAEN,WAAY;MAClBW,KAAK,EAAE;QACLoB,KAAK,EAAE,SAAS;QAChBC,MAAM,EAAE,CAAC;QACTC,SAAS,EAAE,SAAS;QACpBC,WAAW,EAAE;MACf;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEnB,CAAC;AAAC/B,EAAA,CA3CID,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}