{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oldma\\\\OneDrive\\\\Documents\\\\DATA101---Data-Visualization-Dashboard-Project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport WorldMap from './components/WorldMap';\nimport DetailPanel from './components/DetailPanel';\nimport FilterPanel from './components/FilterPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [dataType, setDataType] = useState('lung'); // 'lung' or 'thyroid'\n  const [cancerData, setCancerData] = useState([]);\n  useEffect(() => {\n    const fileName = dataType === 'lung' ? '/data/lung_cancer_prediction_dataset.csv' : '/data/thyroid_cancer_risk_data.csv';\n    Papa.parse(fileName, {\n      download: true,\n      header: true,\n      complete: result => {\n        setCancerData(result.data);\n      },\n      error: error => {\n        console.error('Error loading CSV:', error);\n      }\n    });\n  }, [dataType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cancer Data Visualization Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterPanel, {\n      selectedCountry: selectedCountry,\n      setSelectedCountry: setSelectedCountry,\n      dataType: dataType,\n      setDataType: setDataType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorldMap, {\n      dataType: dataType,\n      onCountrySelect: setSelectedCountry,\n      cancerData: cancerData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), selectedCountry && /*#__PURE__*/_jsxDEV(DetailPanel, {\n      country: selectedCountry,\n      dataType: dataType,\n      cancerData: cancerData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"dashboard-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Data Source: Provided Documentation | Developed by Group 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VQ5ETPOUm7GghMxzetPShFBD5Uw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","WorldMap","DetailPanel","FilterPanel","jsxDEV","_jsxDEV","App","_s","selectedCountry","setSelectedCountry","dataType","setDataType","cancerData","setCancerData","fileName","parse","download","header","complete","result","data","error","console","className","children","_jsxFileName","lineNumber","columnNumber","onCountrySelect","country","_c","$RefreshReg$"],"sources":["C:/Users/oldma/OneDrive/Documents/DATA101---Data-Visualization-Dashboard-Project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\nimport WorldMap from './components/WorldMap';\r\nimport DetailPanel from './components/DetailPanel';\r\nimport FilterPanel from './components/FilterPanel';\r\n\r\nfunction App() {\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [dataType, setDataType] = useState('lung'); // 'lung' or 'thyroid'\r\n  const [cancerData, setCancerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fileName = dataType === 'lung' \r\n      ? '/data/lung_cancer_prediction_dataset.csv'\r\n      : '/data/thyroid_cancer_risk_data.csv';\r\n\r\n    Papa.parse(fileName, {\r\n      download: true,\r\n      header: true,\r\n      complete: (result) => {\r\n        setCancerData(result.data);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading CSV:', error);\r\n      }\r\n    });\r\n  }, [dataType]);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h1>Cancer Data Visualization Dashboard</h1>\r\n      </header>\r\n\r\n      <FilterPanel\r\n        selectedCountry={selectedCountry}\r\n        setSelectedCountry={setSelectedCountry}\r\n        dataType={dataType}\r\n        setDataType={setDataType}\r\n      />\r\n\r\n      <WorldMap\r\n        dataType={dataType}\r\n        onCountrySelect={setSelectedCountry}\r\n        cancerData={cancerData}\r\n      />\r\n\r\n      {selectedCountry && (\r\n        <DetailPanel\r\n          country={selectedCountry}\r\n          dataType={dataType}\r\n          cancerData={cancerData}\r\n        />\r\n      )}\r\n\r\n      <footer className=\"dashboard-footer\">\r\n        <p>Data Source: Provided Documentation | Developed by Group 4</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EAClD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAGJ,QAAQ,KAAK,MAAM,GAChC,0CAA0C,GAC1C,oCAAoC;IAExCV,IAAI,CAACe,KAAK,CAACD,QAAQ,EAAE;MACnBE,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAGC,MAAM,IAAK;QACpBN,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC;MAC5B,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAQkB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAClCnB,OAAA;QAAAmB,QAAA,EAAI;MAAmC;QAAAV,QAAA,EAAAW,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAb,QAAA,EAAAW,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAETtB,OAAA,CAACF,WAAW;MACVK,eAAe,EAAEA,eAAgB;MACjCC,kBAAkB,EAAEA,kBAAmB;MACvCC,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA;IAAY;MAAAG,QAAA,EAAAW,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAEFtB,OAAA,CAACJ,QAAQ;MACPS,QAAQ,EAAEA,QAAS;MACnBkB,eAAe,EAAEnB,kBAAmB;MACpCG,UAAU,EAAEA;IAAW;MAAAE,QAAA,EAAAW,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EAEDnB,eAAe,iBACdH,OAAA,CAACH,WAAW;MACV2B,OAAO,EAAErB,eAAgB;MACzBE,QAAQ,EAAEA,QAAS;MACnBE,UAAU,EAAEA;IAAW;MAAAE,QAAA,EAAAW,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF,eAEDtB,OAAA;MAAQkB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAClCnB,OAAA;QAAAmB,QAAA,EAAG;MAA0D;QAAAV,QAAA,EAAAW,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAb,QAAA,EAAAW,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAb,QAAA,EAAAW,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACpB,EAAA,CAtDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}