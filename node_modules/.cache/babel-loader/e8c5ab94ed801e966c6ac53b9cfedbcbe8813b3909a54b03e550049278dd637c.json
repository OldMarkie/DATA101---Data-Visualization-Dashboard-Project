{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oldma\\\\OneDrive\\\\Documents\\\\DATA101---Data-Visualization-Dashboard-Project\\\\src\\\\components\\\\FilterPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterPanel = ({\n  selectedCountry,\n  setSelectedCountry,\n  dataType,\n  setDataType\n}) => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const normalizeCountryName = name => {\n    const countryMap = {\n      'USA': 'United States of America',\n      'UK': 'United Kingdom'\n    };\n    return countryMap[name] || name;\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const file = dataType === 'lung' ? '/data/lung_cancer_prediction_dataset.csv' : '/data/thyroid_cancer_risk_data.csv';\n      const response = await fetch(file);\n      const csvText = await response.text();\n      Papa.parse(csvText, {\n        header: true,\n        skipEmptyLines: true,\n        complete: results => {\n          const countrySet = new Set(results.data.map(row => normalizeCountryName(row.Country)));\n          setCountries([...countrySet]);\n        }\n      });\n    };\n    fetchData();\n  }, [dataType]);\n  const handleDataTypeChange = e => {\n    setDataType(e.target.value);\n  };\n  const handleCountryChange = e => {\n    setSelectedCountry(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Data Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: dataType,\n        onChange: handleDataTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lung\",\n          children: \"Lung Cancer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"thyroid\",\n          children: \"Thyroid Cancer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Country:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCountry || '',\n        onChange: handleCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Choose a country--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterPanel, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = FilterPanel;\nexport default FilterPanel;\nvar _c;\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"names":["React","useEffect","useState","Papa","jsxDEV","_jsxDEV","FilterPanel","selectedCountry","setSelectedCountry","dataType","setDataType","_s","countries","setCountries","normalizeCountryName","name","countryMap","fetchData","file","response","fetch","csvText","text","parse","header","skipEmptyLines","complete","results","countrySet","Set","data","map","row","Country","handleDataTypeChange","e","target","value","handleCountryChange","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","country","index","_c","$RefreshReg$"],"sources":["C:/Users/oldma/OneDrive/Documents/DATA101---Data-Visualization-Dashboard-Project/src/components/FilterPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst FilterPanel = ({ selectedCountry, setSelectedCountry, dataType, setDataType }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  const normalizeCountryName = (name) => {\r\n    const countryMap = {\r\n      'USA': 'United States of America',\r\n      'UK': 'United Kingdom'\r\n    };\r\n    return countryMap[name] || name;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const file = dataType === 'lung' \r\n        ? '/data/lung_cancer_prediction_dataset.csv' \r\n        : '/data/thyroid_cancer_risk_data.csv';\r\n\r\n      const response = await fetch(file);\r\n      const csvText = await response.text();\r\n      \r\n      Papa.parse(csvText, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: (results) => {\r\n          const countrySet = new Set(results.data.map(row => normalizeCountryName(row.Country)));\r\n          setCountries([...countrySet]);\r\n        },\r\n      });\r\n    };\r\n\r\n    fetchData();\r\n  }, [dataType]);\r\n\r\n  const handleDataTypeChange = (e) => {\r\n    setDataType(e.target.value);\r\n  };\r\n\r\n  const handleCountryChange = (e) => {\r\n    setSelectedCountry(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-panel\">\r\n      <label>\r\n        Select Data Type: \r\n        <select value={dataType} onChange={handleDataTypeChange}>\r\n          <option value=\"lung\">Lung Cancer</option>\r\n          <option value=\"thyroid\">Thyroid Cancer</option>\r\n        </select>\r\n      </label>\r\n      <label>\r\n        Select Country: \r\n        <select value={selectedCountry || ''} onChange={handleCountryChange}>\r\n          <option value=\"\">--Choose a country--</option>\r\n          {countries.map((country, index) => (\r\n            <option key={index} value={country}>{country}</option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}