{"ast":null,"code":"import React,{useState,useEffect}from'react';import Papa from'papaparse';import WorldMap from'./components/WorldMap';import DetailPanel from'./components/DetailPanel';import FilterPanel from'./components/FilterPanel';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[selectedCountry,setSelectedCountry]=useState(null);const[dataType,setDataType]=useState('lung');// 'lung' or 'thyroid'\nconst[cancerData,setCancerData]=useState([]);useEffect(()=>{const fileName=dataType==='lung'?'/data/lung_cancer_prediction_dataset.csv':'/data/thyroid_cancer_risk_data.csv';Papa.parse(fileName,{download:true,header:true,complete:result=>{setCancerData(result.data);},error:error=>{console.error('Error loading CSV:',error);}});},[dataType]);return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Cancer Data Visualization Dashboard\"})}),/*#__PURE__*/_jsx(FilterPanel,{selectedCountry:selectedCountry,setSelectedCountry:setSelectedCountry,dataType:dataType,setDataType:setDataType}),/*#__PURE__*/_jsx(WorldMap,{dataType:dataType,onCountrySelect:setSelectedCountry,cancerData:cancerData}),selectedCountry&&/*#__PURE__*/_jsx(DetailPanel,{country:selectedCountry,dataType:dataType,cancerData:cancerData}),/*#__PURE__*/_jsx(\"footer\",{className:\"dashboard-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Data Source: Provided Documentation | Developed by Group 4\"})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Papa","WorldMap","DetailPanel","FilterPanel","jsx","_jsx","jsxs","_jsxs","App","selectedCountry","setSelectedCountry","dataType","setDataType","cancerData","setCancerData","fileName","parse","download","header","complete","result","data","error","console","className","children","onCountrySelect","country"],"sources":["C:/Users/oldma/OneDrive/Documents/DATA101---Data-Visualization-Dashboard-Project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\nimport WorldMap from './components/WorldMap';\r\nimport DetailPanel from './components/DetailPanel';\r\nimport FilterPanel from './components/FilterPanel';\r\n\r\nfunction App() {\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [dataType, setDataType] = useState('lung'); // 'lung' or 'thyroid'\r\n  const [cancerData, setCancerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fileName = dataType === 'lung' \r\n      ? '/data/lung_cancer_prediction_dataset.csv'\r\n      : '/data/thyroid_cancer_risk_data.csv';\r\n\r\n    Papa.parse(fileName, {\r\n      download: true,\r\n      header: true,\r\n      complete: (result) => {\r\n        setCancerData(result.data);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading CSV:', error);\r\n      }\r\n    });\r\n  }, [dataType]);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h1>Cancer Data Visualization Dashboard</h1>\r\n      </header>\r\n\r\n      <FilterPanel\r\n        selectedCountry={selectedCountry}\r\n        setSelectedCountry={setSelectedCountry}\r\n        dataType={dataType}\r\n        setDataType={setDataType}\r\n      />\r\n\r\n      <WorldMap\r\n        dataType={dataType}\r\n        onCountrySelect={setSelectedCountry}\r\n        cancerData={cancerData}\r\n      />\r\n\r\n      {selectedCountry && (\r\n        <DetailPanel\r\n          country={selectedCountry}\r\n          dataType={dataType}\r\n          cancerData={cancerData}\r\n        />\r\n      )}\r\n\r\n      <footer className=\"dashboard-footer\">\r\n        <p>Data Source: Provided Documentation | Developed by Group 4</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,IAAI,KAAM,WAAW,CAC5B,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,MAAM,CAAC,CAAE;AAClD,KAAM,CAACe,UAAU,CAAEC,aAAa,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAEhDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,QAAQ,CAAGJ,QAAQ,GAAK,MAAM,CAChC,0CAA0C,CAC1C,oCAAoC,CAExCX,IAAI,CAACgB,KAAK,CAACD,QAAQ,CAAE,CACnBE,QAAQ,CAAE,IAAI,CACdC,MAAM,CAAE,IAAI,CACZC,QAAQ,CAAGC,MAAM,EAAK,CACpBN,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,CAC5B,CAAC,CACDC,KAAK,CAAGA,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,CAACX,QAAQ,CAAC,CAAC,CAEd,mBACEJ,KAAA,QAAKiB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpB,IAAA,WAAQmB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAClCpB,IAAA,OAAAoB,QAAA,CAAI,qCAAmC,CAAI,CAAC,CACtC,CAAC,cAETpB,IAAA,CAACF,WAAW,EACVM,eAAe,CAAEA,eAAgB,CACjCC,kBAAkB,CAAEA,kBAAmB,CACvCC,QAAQ,CAAEA,QAAS,CACnBC,WAAW,CAAEA,WAAY,CAC1B,CAAC,cAEFP,IAAA,CAACJ,QAAQ,EACPU,QAAQ,CAAEA,QAAS,CACnBe,eAAe,CAAEhB,kBAAmB,CACpCG,UAAU,CAAEA,UAAW,CACxB,CAAC,CAEDJ,eAAe,eACdJ,IAAA,CAACH,WAAW,EACVyB,OAAO,CAAElB,eAAgB,CACzBE,QAAQ,CAAEA,QAAS,CACnBE,UAAU,CAAEA,UAAW,CACxB,CACF,cAEDR,IAAA,WAAQmB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAClCpB,IAAA,MAAAoB,QAAA,CAAG,4DAA0D,CAAG,CAAC,CAC3D,CAAC,EACN,CAAC,CAEV,CAEA,cAAe,CAAAjB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}