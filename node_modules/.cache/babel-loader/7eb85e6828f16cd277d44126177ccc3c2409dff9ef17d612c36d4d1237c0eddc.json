{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oldma\\\\OneDrive\\\\Documents\\\\DATA101---Data-Visualization-Dashboard-Project\\\\src\\\\components\\\\WorldMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldMap = () => {\n  _s();\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    fetch('/data/custom.geo.json').then(response => response.json()).then(data => setGeoJsonData(data)).catch(err => console.error('Error loading GeoJSON:', err));\n  }, []);\n  const getCountryStyle = () => ({\n    color: '#444',\n    weight: 1,\n    fillColor: '#ccc',\n    fillOpacity: 0.4\n  });\n  const onEachCountry = (feature, layer) => {\n    var _feature$properties;\n    const countryName = (_feature$properties = feature.properties) === null || _feature$properties === void 0 ? void 0 : _feature$properties.name;\n    layer.bindTooltip(countryName, {\n      permanent: false,\n      direction: 'auto',\n      className: 'country-tooltip'\n    });\n    layer.setStyle(getCountryStyle());\n    layer.on({\n      click: () => {\n        setSelectedCountry(countryName);\n        setModalIsOpen(true);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      className: \"map-container\",\n      center: [20, 0],\n      zoom: 2.5,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://stamen-tiles.a.ssl.fastly.net/toner/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://stamen.com/\\\">Stamen Design</a>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), geoJsonData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: geoJsonData,\n        style: getCountryStyle,\n        onEachFeature: onEachCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Country Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Country: \", selectedCountry]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalIsOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldMap, \"a+vwEXxIhNoT+EZFZl8D92UI1Sc=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","GeoJSON","useMap","L","Modal","jsxDEV","_jsxDEV","WorldMap","_s","geoJsonData","setGeoJsonData","selectedCountry","setSelectedCountry","modalIsOpen","setModalIsOpen","fetch","then","response","json","data","catch","err","console","error","getCountryStyle","color","weight","fillColor","fillOpacity","onEachCountry","feature","layer","_feature$properties","countryName","properties","name","bindTooltip","permanent","direction","className","setStyle","on","click","children","center","zoom","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","style","onEachFeature","isOpen","onRequestClose","onClick","_c","$RefreshReg$"],"sources":["C:/Users/oldma/OneDrive/Documents/DATA101---Data-Visualization-Dashboard-Project/src/components/WorldMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, GeoJSON, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport Modal from 'react-modal';\r\n\r\nconst WorldMap = () => {\r\n  const [geoJsonData, setGeoJsonData] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch('/data/custom.geo.json')\r\n      .then(response => response.json())\r\n      .then(data => setGeoJsonData(data))\r\n      .catch(err => console.error('Error loading GeoJSON:', err));\r\n  }, []);\r\n\r\n  const getCountryStyle = () => ({\r\n    color: '#444',\r\n    weight: 1,\r\n    fillColor: '#ccc',\r\n    fillOpacity: 0.4\r\n  });\r\n\r\n  const onEachCountry = (feature, layer) => {\r\n    const countryName = feature.properties?.name;\r\n\r\n    layer.bindTooltip(countryName, {\r\n      permanent: false,\r\n      direction: 'auto',\r\n      className: 'country-tooltip'\r\n    });\r\n\r\n    layer.setStyle(getCountryStyle());\r\n\r\n    layer.on({\r\n      click: () => {\r\n        setSelectedCountry(countryName);\r\n        setModalIsOpen(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MapContainer\r\n        className=\"map-container\"\r\n        center={[20, 0]}\r\n        zoom={2.5}\r\n      >\r\n        <TileLayer\r\n          url=\"https://stamen-tiles.a.ssl.fastly.net/toner/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://stamen.com/\">Stamen Design</a>'\r\n        />\r\n\r\n        {geoJsonData && (\r\n          <GeoJSON data={geoJsonData} style={getCountryStyle} onEachFeature={onEachCountry} />\r\n        )}\r\n      </MapContainer>\r\n\r\n      <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\r\n        <h2>Country Details</h2>\r\n        <p>Selected Country: {selectedCountry}</p>\r\n        <button onClick={() => setModalIsOpen(false)}>Close</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}