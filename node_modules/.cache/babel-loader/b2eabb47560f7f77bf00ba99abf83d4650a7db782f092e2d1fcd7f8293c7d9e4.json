{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oldma\\\\OneDrive\\\\Documents\\\\DATA101---Data-Visualization-Dashboard-Project\\\\src\\\\components\\\\FilterPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterPanel = ({\n  selectedCountry,\n  setSelectedCountry,\n  dataType,\n  setDataType,\n  toggleSideMenu\n}) => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [sideMenuOpen, setSideMenuOpen] = useState(false); // Add state to manage side menu visibility\n\n  const normalizeCountryName = name => {\n    const countryMap = {\n      'usa': 'United States of America',\n      'uk': 'United Kingdom',\n      'dr congo': 'Dem. Rep. Congo'\n    };\n    return countryMap[name] || name;\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const file = dataType === 'lung' ? '/data/lung_cancer_prediction_dataset.csv' : '/data/thyroid_cancer_risk_data.csv';\n      const response = await fetch(file);\n      const csvText = await response.text();\n      Papa.parse(csvText, {\n        header: true,\n        skipEmptyLines: true,\n        complete: results => {\n          const countrySet = new Set(results.data.map(row => normalizeCountryName(row.Country)));\n          setCountries([...countrySet]);\n        }\n      });\n    };\n    fetchData();\n  }, [dataType]);\n  const handleDataTypeChange = e => {\n    setDataType(e.target.value);\n    setSideMenuOpen(true); // Open the side menu when changing data type\n    toggleSideMenu(true); // Notify the parent component (WorldMap)\n  };\n  const handleCountryChange = e => {\n    setSelectedCountry(e.target.value);\n  };\n  const toggleMenu = () => {\n    setSideMenuOpen(prevState => !prevState); // Toggle the side menu visibility\n    toggleSideMenu(!sideMenuOpen); // Pass the current state to the parent component\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setDataType('lung');\n          setSideMenuOpen(true); // Open side menu on button click\n          toggleSideMenu(true); // Notify the parent component (WorldMap)\n        },\n        className: `filter-button ${dataType === 'lung' ? 'active' : ''}`,\n        children: \"Lung Cancer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setDataType('thyroid');\n          setSideMenuOpen(true); // Open side menu on button click\n          toggleSideMenu(true); // Notify the parent component (WorldMap)\n        },\n        className: `filter-button ${dataType === 'thyroid' ? 'active' : ''}`,\n        children: \"Thyroid Cancer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), sideMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Side Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMenu,\n        children: \"Close Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterPanel, \"g7rn3N0VrkqUD2E8OPYrW0j25Fc=\");\n_c = FilterPanel;\nexport default FilterPanel;\nvar _c;\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"names":["React","useEffect","useState","Papa","jsxDEV","_jsxDEV","FilterPanel","selectedCountry","setSelectedCountry","dataType","setDataType","toggleSideMenu","_s","countries","setCountries","sideMenuOpen","setSideMenuOpen","normalizeCountryName","name","countryMap","fetchData","file","response","fetch","csvText","text","parse","header","skipEmptyLines","complete","results","countrySet","Set","data","map","row","Country","handleDataTypeChange","e","target","value","handleCountryChange","toggleMenu","prevState","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/oldma/OneDrive/Documents/DATA101---Data-Visualization-Dashboard-Project/src/components/FilterPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst FilterPanel = ({ selectedCountry, setSelectedCountry, dataType, setDataType, toggleSideMenu }) => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [sideMenuOpen, setSideMenuOpen] = useState(false);  // Add state to manage side menu visibility\r\n\r\n  const normalizeCountryName = (name) => {\r\n    const countryMap = {\r\n      'usa': 'United States of America',\r\n      'uk': 'United Kingdom',\r\n      'dr congo': 'Dem. Rep. Congo'\r\n    };\r\n    return countryMap[name] || name;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const file = dataType === 'lung' \r\n        ? '/data/lung_cancer_prediction_dataset.csv' \r\n        : '/data/thyroid_cancer_risk_data.csv';\r\n\r\n      const response = await fetch(file);\r\n      const csvText = await response.text();\r\n      \r\n      Papa.parse(csvText, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: (results) => {\r\n          const countrySet = new Set(results.data.map(row => normalizeCountryName(row.Country)));\r\n          setCountries([...countrySet]);\r\n        },\r\n      });\r\n    };\r\n\r\n    fetchData();\r\n  }, [dataType]);\r\n\r\n  const handleDataTypeChange = (e) => {\r\n    setDataType(e.target.value);\r\n    setSideMenuOpen(true);  // Open the side menu when changing data type\r\n    toggleSideMenu(true); // Notify the parent component (WorldMap)\r\n  };\r\n\r\n  const handleCountryChange = (e) => {\r\n    setSelectedCountry(e.target.value);\r\n  };\r\n\r\n  const toggleMenu = () => {\r\n    setSideMenuOpen(prevState => !prevState);  // Toggle the side menu visibility\r\n    toggleSideMenu(!sideMenuOpen);  // Pass the current state to the parent component\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-panel\">\r\n      <div className=\"button-group\">\r\n        <button \r\n          onClick={() => {\r\n            setDataType('lung');\r\n            setSideMenuOpen(true);  // Open side menu on button click\r\n            toggleSideMenu(true);  // Notify the parent component (WorldMap)\r\n          }}\r\n          className={`filter-button ${dataType === 'lung' ? 'active' : ''}`}\r\n        >\r\n          Lung Cancer\r\n        </button>\r\n        <button \r\n          onClick={() => {\r\n            setDataType('thyroid');\r\n            setSideMenuOpen(true);  // Open side menu on button click\r\n            toggleSideMenu(true);  // Notify the parent component (WorldMap)\r\n          }}\r\n          className={`filter-button ${dataType === 'thyroid' ? 'active' : ''}`}\r\n        >\r\n          Thyroid Cancer\r\n        </button>\r\n      </div>\r\n\r\n      {/* Conditionally render the side menu */}\r\n      {sideMenuOpen && (\r\n        <div className=\"side-menu\">\r\n          <h3>Side Menu</h3>\r\n          <button onClick={toggleMenu}>Close Menu</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}